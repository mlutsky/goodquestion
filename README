# clone repo into ~/vhosts/localhost
cd ~/vhosts
git clone git@bitbucket.org:mlutsky1231/project0.git localhost

# chmod all directories 711
find ~/vhosts/localhost -type d -exec chmod 711 {} \;

# chmod all PHP files 600
find ~/vhosts/localhost -type f -name *.php -exec chmod 600 {} \;

# chmod most everything else 644
find ~/vhosts/localhost -type f \( -name *.css -o -name *.gif -o -name *.html -o -name *.js -o -name *.jpg -o -name *.png -o -name .htaccess \) -exec chmod 644 {} \;

# create a MySQL database for project
mysql -u jharvard -p -e 'CREATE DATABASE jharvard_mlutsky1231'

# import SQL dump into database
mysql -u jharvard -p < ~/vhosts/mlutsky1231/mysql/jharvard_project0.sql

# ensure http://localhost/ will work
set -o noclobber
echo '127.0.0.1 localhost' >> /etc/hosts

# updates since beta:
* IMPORTANT: Because Facebook only accepts local requests from http://localhost and not addresses like http://project1, in order to test Facebook login you must put our code in a folder such that the URL starts with http://localhost.
* We are using localStorage to prevent users from voting multiple times on questions, and also to allow them to see their past votes (changing them is also possible).
* We have implemented datetime-picking when creating events!
* When the user views a particular event's questions, it will display only the top users who asked a question if the event's end time has already passed. Thus, these users can have the opportunity to ask those questions. If the end time hasn't passed and the start time has, then the app will display a list of questions that people can vote up or vote down, as well as a New Question feature. If you'd like to test the live question-voting service even though the event is not currently going on, you can set the $DEBUG variable in our Main controller to true.
* We use setTimeout before reloading the page to induce a very small delay so that the newly updated information will be up-to-date.
* Facebook login now works, and all questions and events are associated with logged in users
* Site requires Facebook login to vote, create events, or create questions
* Site sends emails to event creator and everyone who submitted questions with the users who proposed the highest-voted questions at the end of the event once when someone visits the page (while this design is admittedly suboptimal, we struggled with email implementation and did not have time to write a CRON script or other automatic method, so we designed it as is for the best facsimile).
* Search by code was updated to only display exact matches


